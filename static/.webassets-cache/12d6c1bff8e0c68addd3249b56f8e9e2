Vvar all, dateDim, ndx, parseDate;\u000a\u000andx = null;\u000a\u000aall = null;\u000a\u000adateDim = null;\u000a\u000aparseDate = d3.time.format("%Y-%m-%d").parse;\u000a\u000ad3.csv("static/aggWeather.csv", function(data) {\u000a  var cf, d, maxDate, minDate, monthlyDimension, temps, timeChart, yearlyDimension, _i, _len;\u000a  cf = crossfilter(data);\u000a  all = cf.groupAll();\u000a  for (_i = 0, _len = data.length; _i < _len; _i++) {\u000a    d = data[_i];\u000a    d.Date = parseDate(d.Date);\u000a  }\u000a  yearlyDimension = cf.dimension(function(d) {\u000a    return d.Year;\u000a  });\u000a  monthlyDimension = cf.dimension(function(d) {\u000a    return d.Month;\u000a  });\u000a  timeChart = dc.lineChart("#timeChart");\u000a  dateDim = cf.dimension(function(d) {\u000a    return d.Date;\u000a  });\u000a  minDate = dateDim.bottom(1)[0].date;\u000a  maxDate = dateDim.top(1)[0].date;\u000a  temps = monthlyDimension.group().reduceSum(function(d) {\u000a    return d.Wind;\u000a  });\u000a  timeChart.width(1200).height(400).dimension(dateDim).group(temps, "Temperature (F)").renderArea(false).x(d3.time.scale().domain([minDate, maxDate])).elasticX(true).brushOn(true).legend(dc.legend().x(60).y(10).itemHeight(13).gap(5)).yAxisLabel("Temperature (F)").margins({\u000a    top: 10,\u000a    left: 50,\u000a    right: 10,\u000a    bottom: 50\u000a  });\u000a  dc.renderAll();\u000a  return console.log(data);\u000a});\u000a
p1
.