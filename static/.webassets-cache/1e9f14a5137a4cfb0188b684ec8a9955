Vvar all, avgTempByMonth, dateDim, dayOfWeek, ndx, orderByAvg, parseDate, reduceAddAvg, reduceInitAvg, reduceRemoveAvg, timeSeries;\u000a\u000atimeSeries = function(dim, weatherMetric) {\u000a  var maxDate, minDate, timeChart;\u000a  timeChart = dc.lineChart("#timeChart");\u000a  minDate = dim.bottom(1)[0].Date;\u000a  maxDate = dim.top(1)[0].Date;\u000a  return timeChart.width(1200).height(400).dimension(dim).group(weatherMetric, "Temperature (F)").renderArea(false).x(d3.time.scale().domain([minDate, maxDate])).elasticX(true).brushOn(true).legend(dc.legend().x(60).y(10).itemHeight(13).gap(5)).yAxisLabel("Temperature (F)").margins({\u000a    top: 10,\u000a    left: 50,\u000a    right: 10,\u000a    bottom: 50\u000a  });\u000a};\u000a\u000areduceAddAvg = function(attr) {\u000a  return function(p, v) {\u000a    ++p.count;\u000a    p.sum += v[attr];\u000a    p.avg = p.sum / p.count;\u000a    return p;\u000a  };\u000a};\u000a\u000areduceRemoveAvg = function(attr) {\u000a  return function(p, v) {\u000a    --p.count;\u000a    p.sum -= v[attr];\u000a    p.avg = p.sum / p.count;\u000a    return p;\u000a  };\u000a};\u000a\u000areduceInitAvg = function() {\u000a  return {\u000a    count: 0,\u000a    sum: 0,\u000a    avg: 0\u000a  };\u000a};\u000a\u000aorderByAvg = function(p) {\u000a  return p.avg;\u000a};\u000a\u000andx = null;\u000a\u000aall = null;\u000a\u000adateDim = null;\u000a\u000adayOfWeek = null;\u000a\u000aavgTempByMonth = null;\u000a\u000aparseDate = d3.time.format("%Y-%m-%d").parse;\u000a\u000ad3.csv("static/aggWeather.csv", function(data) {\u000a  var cf, d, dayOfWeekGroup, monthChart, monthDim, monthlyAvgs, monthlyDimension, months, temps, yearlyDimension, _i, _len;\u000a  cf = crossfilter(data);\u000a  all = cf.groupAll();\u000a  for (_i = 0, _len = data.length; _i < _len; _i++) {\u000a    d = data[_i];\u000a    d.Date = parseDate(d.Date);\u000a    d.month = d3.time.month(d.Date);\u000a    d.Temp = +d.Temp;\u000a    d.Wind = +d.Wind;\u000a    d.Precip = +d.Precip;\u000a    d.Solar = +d.Solar;\u000a  }\u000a  yearlyDimension = cf.dimension(function(d) {\u000a    return d.Year;\u000a  });\u000a  monthlyDimension = cf.dimension(function(d) {\u000a    return d.Month;\u000a  });\u000a  monthlyAvgs = monthlyDimension.group().reduce(function(p, v) {\u000a    console.log(p);\u000a    return console.log(v);\u000a  });\u000a  monthDim = cf.dimension(function(d) {\u000a    return d.Month;\u000a  });\u000a  temps = dateDim.group().reduceSum(function(d) {\u000a    return d.Temp;\u000a  });\u000a  timeSeries(dateDim, temps);\u000a  monthChart = dc.rowChart("#monthChart");\u000a  dayOfWeek = cf.dimension(function(d) {\u000a    var day, name;\u000a    day = d.Weekday;\u000a    name = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];\u000a    return day + "." + name[day];\u000a  });\u000a  months = cf.dimension(function(d) {\u000a    var month, name;\u000a    month = d.Month;\u000a    name = ["Jan", "Feb", "Mar", "Apr", "May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec"];\u000a    return month + "." + name[month - 1];\u000a  });\u000a  dayOfWeekGroup = dayOfWeek.group().reduce(reduceAddAvg('Temp'), reduceRemoveAvg('Temp'), reduceInitAvg);\u000a  avgTempByMonth = months.group().reduce(reduceAddAvg('Temp'), reduceRemoveAvg('Temp'), reduceInitAvg);\u000a  monthChart.width(580).height(580).margins({\u000a    top: 20,\u000a    left: 10,\u000a    right: 10,\u000a    bottom: 20\u000a  }).dimension(months).group(avgTempByMonth).valueAccessor(function(d) {\u000a    return d.value.avg;\u000a  }).ordering(function(d) {\u000a    return d.value.avg;\u000a  }).label(function(d) {\u000a    return d.key.split(".")[1];\u000a  }).title(function(d) {\u000a    console.log(d);\u000a    return d.value.avg;\u000a  }).elasticX(true).xAxis().ticks(4);\u000a  dc.renderAll();\u000a  return console.log(data);\u000a});\u000a
p1
.